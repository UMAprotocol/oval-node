/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "./common";

export interface StandardChronicleFactoryInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "MAX_TRAVERSAL"
      | "create"
      | "defaultUnlockers"
      | "owner"
      | "renounceOwnership"
      | "setDefaultUnlockers"
      | "transferOwnership"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "DefaultUnlockersSet"
      | "OvalDeployed"
      | "OwnershipTransferred"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "MAX_TRAVERSAL",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "create",
    values: [AddressLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "defaultUnlockers",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setDefaultUnlockers",
    values: [AddressLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [AddressLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "MAX_TRAVERSAL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "create", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "defaultUnlockers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDefaultUnlockers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
}

export namespace DefaultUnlockersSetEvent {
  export type InputTuple = [defaultUnlockers: AddressLike[]];
  export type OutputTuple = [defaultUnlockers: string[]];
  export interface OutputObject {
    defaultUnlockers: string[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OvalDeployedEvent {
  export type InputTuple = [
    deployer: AddressLike,
    oval: AddressLike,
    lockWindow: BigNumberish,
    maxTraversal: BigNumberish,
    owner: AddressLike,
    unlockers: AddressLike[]
  ];
  export type OutputTuple = [
    deployer: string,
    oval: string,
    lockWindow: bigint,
    maxTraversal: bigint,
    owner: string,
    unlockers: string[]
  ];
  export interface OutputObject {
    deployer: string;
    oval: string;
    lockWindow: bigint;
    maxTraversal: bigint;
    owner: string;
    unlockers: string[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferredEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface StandardChronicleFactory extends BaseContract {
  connect(runner?: ContractRunner | null): StandardChronicleFactory;
  waitForDeployment(): Promise<this>;

  interface: StandardChronicleFactoryInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  MAX_TRAVERSAL: TypedContractMethod<[], [bigint], "view">;

  create: TypedContractMethod<
    [chronicle: AddressLike, lockWindow: BigNumberish, maxAge: BigNumberish],
    [string],
    "nonpayable"
  >;

  defaultUnlockers: TypedContractMethod<[arg0: BigNumberish], [string], "view">;

  owner: TypedContractMethod<[], [string], "view">;

  renounceOwnership: TypedContractMethod<[], [void], "nonpayable">;

  setDefaultUnlockers: TypedContractMethod<
    [_defaultUnlockers: AddressLike[]],
    [void],
    "nonpayable"
  >;

  transferOwnership: TypedContractMethod<
    [newOwner: AddressLike],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "MAX_TRAVERSAL"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "create"
  ): TypedContractMethod<
    [chronicle: AddressLike, lockWindow: BigNumberish, maxAge: BigNumberish],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "defaultUnlockers"
  ): TypedContractMethod<[arg0: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "renounceOwnership"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setDefaultUnlockers"
  ): TypedContractMethod<
    [_defaultUnlockers: AddressLike[]],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferOwnership"
  ): TypedContractMethod<[newOwner: AddressLike], [void], "nonpayable">;

  getEvent(
    key: "DefaultUnlockersSet"
  ): TypedContractEvent<
    DefaultUnlockersSetEvent.InputTuple,
    DefaultUnlockersSetEvent.OutputTuple,
    DefaultUnlockersSetEvent.OutputObject
  >;
  getEvent(
    key: "OvalDeployed"
  ): TypedContractEvent<
    OvalDeployedEvent.InputTuple,
    OvalDeployedEvent.OutputTuple,
    OvalDeployedEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred"
  ): TypedContractEvent<
    OwnershipTransferredEvent.InputTuple,
    OwnershipTransferredEvent.OutputTuple,
    OwnershipTransferredEvent.OutputObject
  >;

  filters: {
    "DefaultUnlockersSet(address[])": TypedContractEvent<
      DefaultUnlockersSetEvent.InputTuple,
      DefaultUnlockersSetEvent.OutputTuple,
      DefaultUnlockersSetEvent.OutputObject
    >;
    DefaultUnlockersSet: TypedContractEvent<
      DefaultUnlockersSetEvent.InputTuple,
      DefaultUnlockersSetEvent.OutputTuple,
      DefaultUnlockersSetEvent.OutputObject
    >;

    "OvalDeployed(address,address,uint256,uint256,address,address[])": TypedContractEvent<
      OvalDeployedEvent.InputTuple,
      OvalDeployedEvent.OutputTuple,
      OvalDeployedEvent.OutputObject
    >;
    OvalDeployed: TypedContractEvent<
      OvalDeployedEvent.InputTuple,
      OvalDeployedEvent.OutputTuple,
      OvalDeployedEvent.OutputObject
    >;

    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
    OwnershipTransferred: TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
  };
}
