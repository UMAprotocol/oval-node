/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  PermissionProxy,
  PermissionProxyInterface,
} from "../PermissionProxy";

const _abi = [
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
      {
        name: "callData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "senders",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "allowed",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SenderSet",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "allowed",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CallFailed",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
      {
        name: "callData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
  },
  {
    type: "error",
    name: "SenderNotApproved",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109978061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063982fb9d81161005b578063982fb9d8146100d0578063ac9650d814610103578063cf2c550c14610123578063f2fde38b1461013657600080fd5b80631cff79cd14610082578063715018a6146100ab5780638da5cb5b146100b5575b600080fd5b61009561009036600461061c565b610149565b6040516100a2919061072e565b60405180910390f35b6100b3610211565b005b6000546040516001600160a01b0390911681526020016100a2565b6100f36100de366004610741565b60016020526000908152604090205460ff1681565b60405190151581526020016100a2565b61011661011136600461075c565b610225565b6040516100a291906107d1565b6100b3610131366004610833565b61031a565b6100b3610144366004610741565b610385565b3360009081526001602052604090205460609060ff1661018357604051636ae23d1f60e01b81523360048201526024015b60405180910390fd5b600080846001600160a01b03166000856040516101a0919061086f565b60006040518083038185875af1925050503d80600081146101dd576040519150601f19603f3d011682016040523d82523d6000602084013e6101e2565b606091505b509150915081610209578484604051636c544f3360e01b815260040161017a92919061088b565b949350505050565b6102196103fe565b6102236000610458565b565b60608167ffffffffffffffff81111561024057610240610606565b60405190808252806020026020018201604052801561027357816020015b606081526020019060019003908161025e5790505b50905060005b82811015610313576102e330858584818110610297576102976108af565b90506020028101906102a991906108c5565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104a892505050565b8282815181106102f5576102f56108af565b6020026020010181905250808061030b90610913565b915050610279565b5092915050565b6103226103fe565b6001600160a01b038216600081815260016020908152604091829020805460ff19168515159081179091558251938452908301527f8f2370569c3f86d7030114a30f04d77c85f28ab3f365eb3ebb918575841c4fa4910160405180910390a15050565b61038d6103fe565b6001600160a01b0381166103f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161017a565b6103fb81610458565b50565b6000546001600160a01b031633146102235760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606104cd838360405180606001604052806027815260200161093b602791396104d4565b9392505050565b6060600080856001600160a01b0316856040516104f1919061086f565b600060405180830381855af49150503d806000811461052c576040519150601f19603f3d011682016040523d82523d6000602084013e610531565b606091505b50915091506105428683838761054c565b9695505050505050565b606083156105bb5782516000036105b4576001600160a01b0385163b6105b45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161017a565b5081610209565b61020983838151156105d05781518083602001fd5b8060405162461bcd60e51b815260040161017a919061072e565b80356001600160a01b038116811461060157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561062f57600080fd5b610638836105ea565b9150602083013567ffffffffffffffff8082111561065557600080fd5b818501915085601f83011261066957600080fd5b81358181111561067b5761067b610606565b604051601f8201601f19908116603f011681019083821181831017156106a3576106a3610606565b816040528281528860208487010111156106bc57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156106f95781810151838201526020016106e1565b50506000910152565b6000815180845261071a8160208601602086016106de565b601f01601f19169290920160200192915050565b6020815260006104cd6020830184610702565b60006020828403121561075357600080fd5b6104cd826105ea565b6000806020838503121561076f57600080fd5b823567ffffffffffffffff8082111561078757600080fd5b818501915085601f83011261079b57600080fd5b8135818111156107aa57600080fd5b8660208260051b85010111156107bf57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561082657603f19888603018452610814858351610702565b945092850192908501906001016107f8565b5092979650505050505050565b6000806040838503121561084657600080fd5b61084f836105ea565b91506020830135801515811461086457600080fd5b809150509250929050565b600082516108818184602087016106de565b9190910192915050565b6001600160a01b038316815260406020820181905260009061020990830184610702565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126108dc57600080fd5b83018035915067ffffffffffffffff8211156108f757600080fd5b60200191503681900382131561090c57600080fd5b9250929050565b60006001820161093357634e487b7160e01b600052601160045260246000fd5b506001019056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122062cb28768ebad7fa180d4c11b8b16cf2b779333661631a8ea42b4b6eb584ff8864736f6c63430008110033";

type PermissionProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermissionProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PermissionProxy__factory extends ContractFactory {
  constructor(...args: PermissionProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PermissionProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PermissionProxy__factory {
    return super.connect(runner) as PermissionProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermissionProxyInterface {
    return new Interface(_abi) as PermissionProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PermissionProxy {
    return new Contract(address, _abi, runner) as unknown as PermissionProxy;
  }
}
